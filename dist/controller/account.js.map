{"version":3,"sources":["../../src/controller/account.js"],"names":["config","db","api","get","req","res","json","post","register","username","body","email","password","err","account","send","authenticate","session","status","scope","logout","user"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;kBAGe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCA,QAAIC,IAAJ,CAAS,cAAT;AACD,GAFD;;AAKAJ,MAAIK,IAAJ,CAAS,WAAT,EAAsB,UAACH,GAAD,EAAMC,GAAN,EAAc;AAClC,sBAAQG,QAAR,CAAiB,sBAAY,EAAEC,UAAUL,IAAIM,IAAJ,CAASC,KAArB,EAAZ,CAAjB,EAA4DP,IAAIM,IAAJ,CAASE,QAArE,EAA+E,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAC/F,UAAID,GAAJ,EAAS;AACPR,YAAIU,IAAJ,CAASF,GAAT;AACD;AACD,yBAASG,YAAT,CACE,OADF,EACW;AACPC,iBAAS;AADF,OADX,EAGKb,GAHL,EAGUC,GAHV,EAGe,YAAM;AACjBA,YAAIa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,kCAArB;AACD,OALH;AAMD,KAVD;AAWD,GAZD;;AAiBA;AACAb,MAAIK,IAAJ,CAAS,QAAT,EAAmB,mBAASS,YAAT,CACjB,OADiB,EACR;AACPC,aAAS,KADF;AAEPE,WAAO;AAFA,GADQ,CAAnB;;AAMA;AACAjB,MAAIC,GAAJ,CAAQ,SAAR,gCAAiC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7CD,QAAIgB,MAAJ;AACAf,QAAIa,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,yBAArB;AACD,GAHD;;AAMA;AACAb,MAAIC,GAAJ,CAAQ,KAAR,gCAA6B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzCA,QAAIa,MAAJ,CAAW,GAAX,EAAgBZ,IAAhB,CAAqBF,IAAIiB,IAAzB;AACD,GAFD;;AAKA,SAAOnB,GAAP;AACD,C","file":"account.js","sourcesContent":["import mongoose from \"mongoose\";\nimport { Router } from \"express\";\nimport Account from \"../model/account\";\nimport bodyParser from \"body-parser\";\nimport passport from \"passport\";\nimport config from \"../config\";\n\nimport { generateAccessToken, respond, authenticate } from \"../middleware/authmiddleware\";\n\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // 'v1/account'\n  api.get('/olumide', (req, res) => {\n    res.json('test working');\n  });\n\n\n  api.post('/register', (req, res) => {\n    Account.register(new Account({ username: req.body.email }), req.body.password, (err, account) => {\n      if (err) {\n        res.send(err);\n      }\n      passport.authenticate(\n        'local', {\n          session: false\n        })(req, res, () => {\n          res.status(200).send(\"Successfully created new account\")\n        });\n    });\n  });\n\n\n\n\n  // 'v1/account/login'\n  api.post('/login', passport.authenticate(\n    'local', {\n      session: false,\n      scope: []\n  }), generateAccessToken, respond);\n\n  // 'v1/account/logout'\n  api.get('/logout', authenticate, (req, res) => {\n    req.logout();\n    res.status(200).send(\"Successfully logged out\");\n  });\n\n\n  // 'v1/account/me'\n  api.get('/me', authenticate, (req, res) => {\n    res.status(200).json(req.user);\n  })\n\n\n  return api;\n}\n"]}