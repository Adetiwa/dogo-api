{"version":3,"sources":["../../src/controller/fare.js"],"names":["config","db","api","post","adminAuthorization","req","res","type","body","Fare","find","err","fare","errors","kind","status","json","msg","length","newFare","first_3_hours","per_min","one_way_charge","night_charge","save","message","data","get","authenticate","fares","findById","params","id","put","findOneAndUpdate","new","delete","send","remove"],"mappings":"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","file":"fare.js","sourcesContent":["import { Router } from \"express\";\nimport Fare from \"../model/fare\";\nimport { authenticate } from \"../middleware/authmiddleware\";\nimport { adminAuthorization, userAuthentication } from \"../middleware/adminAuth\";\nimport { getID } from \"../helpers/auth\";\n\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  //'v1/foodtruck/add'\n  api.post('/add', adminAuthorization, (req, res) => {\n    let type = req.body.type;\n    Fare.find({type: type}, (err, fare) => {\n      if (err) {\n        if (err.errors.type.kind == 'enum') {\n          res.status(403).json({status: false, msg: 'Invalid fare type'});\n        } else {\n          res.status(403).json({status: false, msg: err});\n        }\n        return;\n      }\n      if (fare.length == 0) {\n         let newFare = new Fare();\n            newFare.type = req.body.type;\n            newFare.first_3_hours = req.body.first_3_hours;\n            newFare.per_min = req.body.per_min;\n            if (req.body.type == 'round_trip') {\n              newFare.one_way_charge = 0;\n            } else {\n              newFare.one_way_charge = req.body.one_way_charge;\n            }\n            newFare.night_charge = req.body.night_charge;\n            \n            newFare.save(err => {\n            if (err) {\n              res.status(403).json({status: false, msg: err});\n              return;\n            }\n            Fare.find({}, (err, fare) => {\n              if (err) {\n                res.status(403).json({status: false, msg: err});\n                return;\n              }\n              res.json({ status: true, message: \"Fare successfully created\", data: fare });\n            });\n          });\n      } else {\n      \n        Fare.find({}, (err, fare) => {\n          if (err) {\n            res.status(403).json({status: false, msg: err});\n            return;\n          }\n          res.json({ status: true, message: \"Fare already added\", data: fare });\n        });\n        \n      }\n\n    });\n    \n  });\n\n\n  //'v1/foodtruck'\n  api.get('/', authenticate, (req, res) => {\n    Fare.find({}, (err, fares) => {\n      if (err) {\n        res.status(403).json({status: false, msg: err});\n        return;\n      }\n      res.json({status: true, data: fares});\n    });\n  });\n\n\n\n\n  //'v1/foodtruck/:id' - READ\n  api.get('/:id', adminAuthorization, (req, res) => {\n    Fare.findById(req.params.id, (err, fare) => {\n      if (err) {\n        res.status(500).json({status: false, msg: err});\n        return;\n      }\n      res.json({status: false, data: fare});\n    });\n  });\n\n  //'v1/foodtruck/:id' - UPDATE\n  api.put('/', adminAuthorization, (req, res) => {\n    var type = req.body.type;\n    if (type) {\n      Fare.findOneAndUpdate({type: type}, req.body, {new: true}, (err, fare) => {\n        if (err) {\n          res.status(403).json({status: false, msg: err});\n          return;\n        }\n        if (fare) {\n         \n            Fare.find({}, (err, fares) => {\n              if (err) {\n                res.status(403).json({status: false, msg: err});\n                return;\n              }\n              res.json({ status: true, message: \"Fare successfully editted\", data: fares });\n            });\n          \n        } else {\n          res.status(403).json({status: false, msg: \"Fare type doesn't exist\"});\n        }\n\n      });\n      \n     }\n});\n\n  //'v1/foodtruck/:id' - DELETE\n  api.delete('/:id', adminAuthorization, (req, res) => {\n    Fare.findById(req.params.id, (err, fare) => {\n      if (err) {\n        res.status(500).send(err);\n        return;\n      }\n      if (fare === null) {\n        res.status(404).json({status: false, msg: \"Fare not found\"});\n        return;\n      }\n      Fare.remove({\n        \"_id\": req.params.id\n      },(err, fare) => {\n          if (err) {\n            res.status(500).json({status: false, msg: err});\n            return;\n          }\n          Fare.find({}, (err, fares) => {\n            if (err) {\n              res.status(403).json({status: false, msg: err});\n              return;\n            }\n            res.json({ status: true, message: \"Fare successfully deleted\", data: fares });\n          });\n        });\n    });\n  });\n\n  return api;\n}\n"]}