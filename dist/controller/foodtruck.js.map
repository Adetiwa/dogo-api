{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","req","res","newFoodTruck","name","body","foodtype","avgcost","geometry","coordinates","save","err","send","json","get","find","foodtrucks","findById","params","id","foodtruck","put","delete","status","remove","message","newReview","title","text","_id","review","reviews","push"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from \"mongoose\";\nimport { Router } from \"express\";\nimport FoodTruck from \"../model/foodtruck\";\nimport Review from \"../model/review\";\n\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  //'v1/foodtruck/add'\n  api.post('/add', (req, res) => {\n    let newFoodTruck = new FoodTruck();\n    newFoodTruck.name = req.body.name;\n    newFoodTruck.foodtype = req.body.foodtype;\n    newFoodTruck.avgcost = req.body.avgcost;\n    newFoodTruck.geometry.coordinates = req.body.geometry.coordinates;\n\n    newFoodTruck.save(err => {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ \"message\": \"FoodTruck saved successfully\" });\n    });\n  });\n\n  //'v1/foodtruck'\n  api.get('/', (req, res) => {\n    FoodTruck.find({}, (err, foodtrucks) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtrucks);\n    });\n  });\n\n  //'v1/foodtruck/:id' - READ\n  api.get('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(foodtruck);\n    });\n  });\n\n  //'v1/foodtruck/:id' - UPDATE\n  api.put('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      foodtruck.name = req.body.name;\n      foodtruck.save(err => {\n        if (err) {\n          res.send(err);\n        }\n        res.json({\"message\": \"FoodTruck info updated!\"});\n      });\n    });\n  });\n\n  //'v1/foodtruck/:id' - DELETE\n  api.delete('/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.status(500).send(err);\n        return;\n      }\n      if (foodtruck === null) {\n        res.status(404).send(\"Foodtruck not found\");\n        return;\n      }\n      FoodTruck.remove({\n        \"_id\": req.params.id\n        },(err, foodtruck) => {\n          if (err) {\n            res.status(500).send(err);\n            return;\n          }\n          res.json({message: \"FoodTruck successfully removed!\"});\n      });\n    });\n  });\n\n\n  //add review for specific foodtruck id\n  // 'v1/foodtruck/reviews/add/:id'\n  api.post('/reviews/add/:id', (req, res) => {\n    FoodTruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      let newReview = new Review();\n      newReview.title = req.body.title;\n      newReview.text = req.body.text;\n      newReview.foodtruck = foodtruck._id;\n\n      newReview.save((err, review) => {\n        if (err) {\n          res.send(err);\n        }\n        foodtruck.reviews.push(newReview);\n        foodtruck.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({message: \"Successfully saved review\"});\n        });\n      });\n    });\n  });\n\n\n  //get review for specific foodtruck id\n  // 'v1/foodtruck/reviews/:id'\n  api.get('/reviews/:id', (req, res) => {\n    Review.find({foodtruck: req.params.id}, (err, reviews) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(reviews);\n    });\n  });\n\n\n\n  return api;\n}\n"]}