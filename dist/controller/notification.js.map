{"version":3,"sources":["../../src/controller/notification.js"],"names":["config","db","api","post","authenticate","req","res","newNotification","Notification","user","body","text","profile","save","err","status","json","msg","find","noti","message","data","get","params","id","delete","adminAuthorization","findById","send","remove"],"mappings":"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","file":"notification.js","sourcesContent":["import { Router } from \"express\";\nimport Notification from \"../model/notification\";\nimport { authenticate } from \"../middleware/authmiddleware\";\nimport { adminAuthorization, userAuthentication } from \"../middleware/adminAuth\";\nimport { getID } from \"../helpers/auth\";\n\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  //'v1/foodtruck/add'\n  api.post('/add', authenticate, (req, res) => {\n    let newNotification = new Notification();\n    newNotification.user = req.body.user;\n    newNotification.text = req.body.text;\n    newNotification.profile = req.body.profile;\n    \n    newNotification.save(err => {\n    if (err) {\n        res.status(403).json({status: false, msg: err});\n        return;\n    }\n    Notification.find({}, (err, noti) => {\n        if (err) {\n        res.status(403).json({status: false, msg: err});\n        return;\n        }\n        res.json({ status: true, message: \"Notification successfully created\", data: noti });\n    });\n    });\n      \n  });\n\n\n  //'v1/foodtruck'\n  api.get('/:id', authenticate, (req, res) => {\n    Notification.find({user: req.params.id}, (err, noti) => {\n      if (err) {\n        res.status(403).json({status: false, msg: err});\n        return;\n      }\n      res.json({status: true, data: noti});\n    });\n  });\n\n\n\n  //'v1/foodtruck/:id' - DELETE\n  api.delete('/:id', adminAuthorization, (req, res) => {\n    Notification.findById(req.params.id, (err, noti) => {\n      if (err) {\n        res.status(500).send(err);\n        return;\n      }\n      if (noti === null) {\n        res.status(404).json({status: false, msg: \"Notification not found\"});\n        return;\n      }\n      Notification.remove({\n        \"_id\": req.params.id\n      },(err, noti) => {\n          if (err) {\n            res.status(500).json({status: false, msg: err});\n            return;\n          }\n          Notification.find({}, (err, noti) => {\n            if (err) {\n              res.status(403).json({status: false, msg: err});\n              return;\n            }\n            res.json({ status: true, message: \"Notification successfully deleted\", data: noti });\n          });\n        });\n    });\n  });\n\n  return api;\n}\n"]}