{"version":3,"sources":["../../src/controller/support.js"],"names":["config","db","api","post","authenticate","req","res","newSupport","Support","category","body","text","title","save","err","status","json","msg","find","support","message","data","get","supports","delete","adminAuthorization","findById","params","id","send","remove"],"mappings":"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","file":"support.js","sourcesContent":["import { Router } from \"express\";\nimport Support from \"../model/support\";\nimport { authenticate } from \"../middleware/authmiddleware\";\nimport { adminAuthorization, userAuthentication } from \"../middleware/adminAuth\";\nimport { getID } from \"../helpers/auth\";\n\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  //'v1/foodtruck/add'\n  api.post('/add', authenticate, (req, res) => {\n    let newSupport = new Support();\n    newSupport.category = req.body.category;\n    newSupport.text = req.body.text;\n    newSupport.title = req.body.title;\n    \n    newSupport.save(err => {\n    if (err) {\n        res.status(403).json({status: false, msg: err});\n        return;\n    }\n    Support.find({}, (err, support) => {\n        if (err) {\n        res.status(403).json({status: false, msg: err});\n        return;\n        }\n        res.json({ status: true, message: \"Support successfully created\", data: support });\n    });\n    });\n      \n  });\n\n\n  //'v1/foodtruck'\n  api.get('/', authenticate, (req, res) => {\n    Support.find({}, (err, supports) => {\n      if (err) {\n        res.status(403).json({status: false, msg: err});\n        return;\n      }\n      res.json({status: true, data: supports});\n    });\n  });\n\n\n\n  //'v1/foodtruck/:id' - DELETE\n  api.delete('/:id', adminAuthorization, (req, res) => {\n    Support.findById(req.params.id, (err, support) => {\n      if (err) {\n        res.status(500).send(err);\n        return;\n      }\n      if (support === null) {\n        res.status(404).json({status: false, msg: \"support not found\"});\n        return;\n      }\n      Support.remove({\n        \"_id\": req.params.id\n      },(err, support) => {\n          if (err) {\n            res.status(500).json({status: false, msg: err});\n            return;\n          }\n          Support.find({}, (err, support) => {\n            if (err) {\n              res.status(403).json({status: false, msg: err});\n              return;\n            }\n            res.json({ status: true, message: \"Support successfully deleted\", data: support });\n          });\n        });\n    });\n  });\n\n  return api;\n}\n"]}