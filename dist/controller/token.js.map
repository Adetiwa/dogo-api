{"version":3,"sources":["../../src/controller/token.js"],"names":["config","db","api","post","authenticate","req","res","fcmToken","FcmToken","find","token","body","err","json","status","msg","device","user","type","save","params","id","console","log","length","forEach","element","data","delete","findById","remove","message"],"mappings":"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","file":"token.js","sourcesContent":["import mongoose from \"mongoose\";\nimport { Router } from \"express\";\nimport bodyParser from \"body-parser\";\nimport FcmToken from \"../model/token\";\nimport User from \"../model/user\";\nimport { authenticate } from \"../middleware/authmiddleware\";\nimport { userAuthentication } from \"../middleware/adminAuth\";\nimport notification from \"./../services/notification\";\n\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  //'v1/foodtruck/add'\n  api.post('/add', authenticate, (req, res) => {\n        let fcmToken = new FcmToken();\n        FcmToken.find({token: req.body.token}, (err, token) => {\n          if (err) {\n           res.json({ status: false, msg: 'here'  });\n           return;\n         } else if ((token == null) || (token == '')) {\n             fcmToken.token = req.body.token;\n             fcmToken.device = req.body.device;\n             fcmToken.user = req.body.user;\n             fcmToken.type = req.body.type;\n             fcmToken.save(err => {\n               if (err) {\n                 res.json({ status: false, msg: err });\n                 return;\n               }\n               res.json({ status: true, msg: \"success\" });\n             });\n           } else {\n             res.json({ status: true, msg: \"token already saved\" });\n           }\n        })\n\n      });\n\n\n  api.post('/push-test/:id', (req, res) => {\n    FcmToken.find({user: req.params.id}, (err, token) => {\n      if (err) {\n        console.log(err);\n        res.status(500).json({status: false, msg: \"A server error occured\"});\n      } else {\n        // we have deleted the user\n        // let data = {\n        //   title: \"Test notification\",\n        //   body: \"This is a test notification sent to you\"\n        // };\n        // let not = {\n        //   title: \"Test notification\",\n        //   body: \"This is a test notification sent to you\"\n        // };\n        console.log(token.length)\n          \n        if (token.length > 0) {\n          token.forEach(element => {\n            notification(element.token, \"Hello world\", \"To olumidde!!!!\", element.type);\n          });\n        } else {\n          // console.log(\"No token\");\n        }\n        res.json({status: true, data: token.token}); \n      }\n    });\n\n  });    \n\n\n  //'v1/foodtruck/:id' - DELETE\n  api.delete('/:id', (req, res) => {\n \n    FcmToken.findById(req.params.id).remove((err, token) => {\n      if (err) {\n        res.status(500).json({status: false, msg: \"A server error occured\"});\n      } else {\n        // we have deleted the user\n        // FcmToken.remove({\n        //   \"_id\": req.params.id\n        // },(err, token) => {\n        //   if (err) {\n        //     res.status(500).json({status: false, msg: err});\n        //     return;\n        //   }\n        \n        res.status(200).json({status: true, message: \"success\"});\n        // });\n     }\n    });\n\n  });\n\n\n\n  return api;\n}\n"]}