{"version":3,"sources":["../../src/helpers/auth.js"],"names":["getID","authentication","auth","token","split","decoded","jwt","verify","process","env","SECRET","console","log","Date","exp","id","err","res","status","json","msg","message","expiryTime","time","iat","timestamp","Math","floor","now","milliseconds","ms","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEE,IAAIA,QAAQ,SAARA,KAAQ,CAACC,cAAD,EAAoB;AAC9B,MAAIC,OAAOD,cAAX;AACA,MAAIE,QAAQD,KAAKE,KAAL,CAAW,GAAX,CAAZ;AACA,MAAI;AACA,QAAIC,UAAUC,uBAAIC,MAAJ,CAAWJ,MAAM,CAAN,CAAX,EAAqBK,QAAQC,GAAR,CAAYC,MAAjC,CAAd;AACA;AACCC,YAAQC,GAAR,CAAY,iBAAe,IAAIC,IAAJ,CAASR,QAAQS,GAAR,GAAc,IAAvB,CAA3B;AACD;AACA,WAAOT,QAAQU,EAAf;AACH,GAND,CAME,OAAMC,GAAN,EAAW;AACXC,QAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACD,QAAQ,KAAT,EAAgBE,KAAKJ,IAAIK,OAAzB,EAArB;AACA;AACD;AACF,CAbD;;AAeA,IAAIC,aAAa,SAAbA,UAAa,CAACC,IAAD,EAAOC,GAAP,EAAe;AAC9B,MAAIC,YAAYD,OAAOE,KAAKC,KAAL,CAAWd,KAAKe,GAAL,KAAa,IAAxB,CAAvB;;AAEC,MAAI,OAAOL,IAAP,KAAgB,QAApB,EAA8B;AAC5B,QAAIM,eAAeC,GAAGP,IAAH,CAAnB;AACA,QAAI,OAAOM,YAAP,KAAwB,WAA5B,EAAyC;AACxC;AACA;AACD,WAAOH,KAAKC,KAAL,CAAWF,YAAYI,eAAe,IAAtC,CAAP;AACD,GAND,MAMO,IAAI,OAAON,IAAP,KAAgB,QAApB,EAA+B;AACpC,WAAOE,YAAYF,IAAnB;AACD,GAFM,MAEA;AACL;AACD;AACD,CAdH;;AAiBFQ,OAAOC,OAAP,GAAiB;AACfhC,cADe;AAEfsB;AAFe,CAAjB","file":"auth.js","sourcesContent":["import config from '../config/secret';\nimport expressJwt from \"express-jwt\";\nimport jwt from \"jsonwebtoken\";\n\n  let getID = (authentication) => {\n    var auth = authentication;\n    var token = auth.split(' ');\n    try {\n        var decoded = jwt.verify(token[1], process.env.SECRET);\n        //console.log(JSON.stringify(decoded))\n         console.log(\"expires: in \"+new Date(decoded.exp * 1000));\n        //console.log(expiryTime(decoded.exp, decoded.iat))\n        return decoded.id;\n    } catch(err) {\n      res.status(403).json({status: false, msg: err.message})\n      return;\n    }\n  }\n\n  let expiryTime = (time, iat) => {\n    var timestamp = iat || Math.floor(Date.now() / 1000);\n\n     if (typeof time === 'string') {\n       var milliseconds = ms(time);\n       if (typeof milliseconds === 'undefined') {\n        return;\n       }\n       return Math.floor(timestamp + milliseconds / 1000);\n     } else if (typeof time === 'number' ) {\n       return timestamp + time;\n     } else {\n       return;\n     }\n    }\n\n\nmodule.exports = {\n  getID,\n  expiryTime\n}\n"]}