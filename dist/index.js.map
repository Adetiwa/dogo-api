{"version":3,"sources":["../src/index.js"],"names":["env","config","app","server","http","createServer","LocalStrategy","require","Strategy","User","use","bodyParser","json","urlencoded","extended","passport","initialize","express","static","__dirname","get","req","res","sendFile","usernameField","passwordField","authenticate","serializeUser","deserializeUser","next","setHeader","routes","provider","cron","errorHandler","listen","process","PORT","console","log","secret","url"],"mappings":";;;;;;AAAA;;;;AAEA;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAbAA,iBAAIC,MAAJ;;AAIA,IAAIC,MAAM,wBAAV;;AAGA,IAAIC,MAAJ;AACAA,SAASC,eAAKC,YAAL,CAAkBH,GAAlB,CAAT;AACA,IAAMI,gBAAgBC,QAAQ,gBAAR,EAA0BC,QAAhD;;AAKA,IAAIC,OAAOF,QAAQ,cAAR,CAAX;AACA;AACAL,IAAIQ,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;;AAEAV,IAAIQ,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB;AAC5BC,YAAU;AADkB,CAAtB,CAAR;;AAIA;AACAZ,IAAIQ,GAAJ,CAAQK,mBAASC,UAAT,EAAR;AACAd,IAAIQ,GAAJ,CAAQO,kBAAQC,MAAR,CAAeC,YAAY,SAA3B,CAAR;;AAEAjB,IAAIkB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,MAAIC,QAAJ,CAAaJ,YAAY,eAAzB;AACH,CAFD;AAGAJ,mBAASL,GAAT,CAAa,IAAIJ,aAAJ,CAAkB;AAC7BkB,iBAAe,OADc;AAE7BC,iBAAe;AAFc,CAAlB,EAIXhB,KAAKiB,YAAL,EAJW,CAAb;AAMAX,mBAASY,aAAT,CAAuBlB,KAAKkB,aAAL,EAAvB;AACAZ,mBAASa,eAAT,CAAyBnB,KAAKmB,eAAL,EAAzB;;AAIA1B,IAAIQ,GAAJ,CAAQ,UAACW,GAAD,EAAMC,GAAN,EAAWO,IAAX,EAAoB;AAC1BP,MAAIQ,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAR,MAAIQ,SAAJ,CAAc,8BAAd,EAA8C,wCAA9C;AACAR,MAAIQ,SAAJ,CAAc,8BAAd,EAA8C,6CAA9C;AACAR,MAAIQ,SAAJ,CAAc,kCAAd,EAAkD,IAAlD;AACAD;AACD,CAND;;AASA;AACA3B,IAAIQ,GAAJ,CAAQ,SAAR,EAAmBqB,gBAAnB;AACAC,oBAASC,IAAT;AACA/B,IAAIQ,GAAJ,CAAQwB,sBAAR;;AAEA/B,OAAOgC,MAAP,CAAcC,QAAQpC,GAAR,CAAYqC,IAAZ,IAAoB,IAAlC,EAAwC,YAAM;AAC5CC,UAAQC,GAAR,sBAA+BH,QAAQpC,GAAR,CAAYqC,IAA3C,YAAsDpC,iBAAOuC,MAAP,CAAcC,GAApE;AACD,CAFD;;AAIA;;kBAEevC,G","file":"index.js","sourcesContent":["import env from \"dotenv\";\nenv.config();\nimport 'babel-polyfill'\nimport http from \"http\";\nimport express from \"express\";\nvar app = express();\nimport bodyParser from \"body-parser\";\nimport passport from \"passport\";\nvar server;\nserver = http.createServer(app);\nconst LocalStrategy = require('passport-local').Strategy;\nimport errorHandler from \"./middleware/errorHandler\";\nimport routes from \"./routes\";\nimport provider from \"./providers\";\nimport config from \"./config\";\nlet User = require('./model/user');\n// console.log(process.env);\napp.use(bodyParser.json());\n\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\n\n//passport config\napp.use(passport.initialize());\napp.use(express.static(__dirname + '/public'));\n\napp.get('/', (req, res) => {\n    res.sendFile(__dirname + '/emitter.html');\n});\npassport.use(new LocalStrategy({\n  usernameField: 'email',\n  passwordField: 'password'\n},\n  User.authenticate()\n));\npassport.serializeUser(User.serializeUser());\npassport.deserializeUser(User.deserializeUser());\n\n\n\napp.use((req, res, next) => {\n  res.setHeader('Access-Control-Allow-Origin', '*');\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\n  res.setHeader('Access-Control-Allow-Headers', 'Authorization, Origin, Content-Type, Accept');\n  res.setHeader('Access-Control-Allow-Credentials', true);\n  next();\n});\n\n\n//api routes v1\napp.use('/api/v1', routes);\nprovider.cron;\napp.use(errorHandler);\n\nserver.listen(process.env.PORT || 3000, () => {\n  console.log(`Started on port ${process.env.PORT} || ${config.secret.url}`);\n})\n\n// app.listen(config.port);\n\nexport default app;\n"]}