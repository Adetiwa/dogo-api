{"version":3,"sources":["../../../src/lib/routes/socket.js"],"names":["cv","require","camWidth","camHeight","camFps","camInterval","rectColor","rectThickness","camera","VideoCapture","module","exports","socket","console","log","id","setInterval","read","err","im","detectObject","faces","i","length","face","rectangle","x","y","width","height","emit","buffer","toBuffer","save"],"mappings":";;AAAA,IAAIA,KAAKC,QAAQ,eAAR,CAAT;;AAEA;AACA,IAAIC,WAAW,GAAf;AACA,IAAIC,YAAY,GAAhB;AACA,IAAIC,SAAS,EAAb;AACA,IAAIC,cAAc,OAAOD,MAAzB;;AAEA;AACA,IAAIE,YAAY,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,CAAhB;AACA,IAAIC,gBAAgB,CAApB;;AAEA;AACA,IAAIC,SAAS,IAAIR,GAAGS,YAAP,CAAoB,CAApB,CAAb;AACA;AACA;;AAEAC,OAAOC,OAAP,GAAiB,UAAUC,MAAV,EAAkB;AACjCC,UAAQC,GAAR,CAAYF,OAAOG,EAAP,GAAW,YAAvB;AACAC,cAAY,YAAW;AACrBR,WAAOS,IAAP,CAAY,UAASC,GAAT,EAAcC,EAAd,EAAkB;AAC5B,UAAID,GAAJ,EAAS,MAAMA,GAAN;;AAETC,SAAGC,YAAH,CAAgB,gFAAhB,EAAkG,EAAlG,EAAsG,UAASF,GAAT,EAAcG,KAAd,EAAqB;AACzH,YAAIH,GAAJ,EAAS,MAAMA,GAAN;;AAET,aAAK,IAAII,IAAI,CAAb,EAAgBA,IAAID,MAAME,MAA1B,EAAkCD,GAAlC,EAAuC;AACrCE,iBAAOH,MAAMC,CAAN,CAAP;AACAH,aAAGM,SAAH,CAAa,CAACD,KAAKE,CAAN,EAASF,KAAKG,CAAd,CAAb,EAA+B,CAACH,KAAKI,KAAN,EAAaJ,KAAKK,MAAlB,CAA/B,EAA0DvB,SAA1D,EAAqEC,aAArE;AACD;;AAEDK,eAAOkB,IAAP,CAAY,OAAZ,EAAqB,EAAEC,QAAQZ,GAAGa,QAAH,EAAV,EAArB;AACAb,WAAGc,IAAH,CAAQ,UAAR;AACD,OAVD;AAWD,KAdD;AAeD,GAhBD,EAgBG5B,WAhBH;AAiBD,CAnBD","file":"socket.js","sourcesContent":["var cv = require('opencv4nodejs');\n\n// camera properties\nvar camWidth = 320;\nvar camHeight = 240;\nvar camFps = 10;\nvar camInterval = 1000 / camFps;\n\n// face detection properties\nvar rectColor = [0, 255, 0];\nvar rectThickness = 2;\n\n// initialize camera\nvar camera = new cv.VideoCapture(0);\n// camera.setWidth(camWidth);\n// camera.setHeight(camHeight);\n\nmodule.exports = function (socket) {\n  console.log(socket.id +' connected');\n  setInterval(function() {\n    camera.read(function(err, im) {\n      if (err) throw err;\n\n      im.detectObject('./node_modules/opencv4nodejs/lib/haarcascades/haarcascade_frontalface_alt2.xml', {}, function(err, faces) {\n        if (err) throw err;\n\n        for (var i = 0; i < faces.length; i++) {\n          face = faces[i];\n          im.rectangle([face.x, face.y], [face.width, face.height], rectColor, rectThickness);\n        }\n\n        socket.emit('frame', { buffer: im.toBuffer() });\n        im.save('cam2.jpg');\n      });\n    });\n  }, camInterval);\n};\n"]}