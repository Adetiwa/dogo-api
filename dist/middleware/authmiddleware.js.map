{"version":3,"sources":["../../src/middleware/authmiddleware.js"],"names":["TOKENTIME","authenticate","secret","config","generateAccessToken","err","req","res","next","token","jwt","sign","id","user","type","expiresIn","respond","send","status","json","fullname","name","username","tel","iat","exp","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,YAAa,KAAK,EAAL,GAAU,EAAV,GAAe,EAAlC,C,CAAsC;AACtC;AACA;;AAEA,IAAIC,eAAe,0BAAW;AAC5BC,UAAQC,iBAAOD,MAAP,CAAcA,MADM,CACC;AADD,CAAX,CAAnB;;AAKA,IAAIE,sBAAsB,SAAtBA,mBAAsB,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AACjDF,MAAIG,KAAJ,GAAYH,IAAIG,KAAJ,IAAa,EAAzB;AACAH,MAAIG,KAAJ,GAAYC,uBAAIC,IAAJ,CAAS;AACnBC,QAAIN,IAAIO,IAAJ,CAASD,EADM;AAEnBE,UAAMR,IAAIO,IAAJ,CAASC;AAFI,GAAT,EAIZX,iBAAOD,MAAP,CAAcA,MAJF,EAIU;AAClBa,eAAWf;AADO,GAJV,CAAZ;AAOA;AACAQ;AACD,CAXD;;AAcA,IAAIQ,UAAU,SAAVA,OAAU,CAACV,GAAD,EAAMC,GAAN,EAAWF,GAAX,EAAmB;AAC/B,MAAIA,GAAJ,EAAS;AACPE,QAAIU,IAAJ,CAAS,cAAYZ,GAArB;AACA;AACD;AACDE,MAAIW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBP,QAAIN,IAAIO,IAAJ,CAASD,EADM;AAEnBQ,cAAUd,IAAIO,IAAJ,CAASQ,IAFA;AAGnBR,UAAMP,IAAIO,IAAJ,CAASS,QAHI;AAInBC,SAAKjB,IAAIO,IAAJ,CAASU,GAJK;AAKnBd,WAAOH,IAAIG,KALQ;AAMnBe,SAAKlB,IAAIO,IAAJ,CAASW,GANK;AAOnBC,SAAKnB,IAAIO,IAAJ,CAASY,GAPK;AAQnBP,YAAQ;AARW,GAArB;AAUD,CAfD;;AAiBAQ,OAAOC,OAAP,GAAiB;AACf1B,4BADe;AAEfG,0CAFe;AAGfY;;AAHe,CAAjB","file":"authmiddleware.js","sourcesContent":["import jwt from \"jsonwebtoken\";\nimport expressJwt from \"express-jwt\";\nimport config from '../config';\n\nconst TOKENTIME =  60 * 60 * 24 * 30; //30 day\n// const SECRET = process.env.SECRET;\n// console.log(SECRET, '1');\n\nlet authenticate = expressJwt({\n  secret: config.secret.secret //process.env.SECRET\n});\n\n\nlet generateAccessToken = (err, req, res, next) => {\n  req.token = req.token || {};\n  req.token = jwt.sign({\n    id: req.user.id,\n    type: req.user.type\n  },\n  config.secret.secret, {\n      expiresIn: TOKENTIME\n  });\n  // return req\n  next();\n}\n\n\nlet respond = (req, res, err) => {\n  if (err) {\n    res.send('error is '+err);\n    return;\n  }\n  res.status(200).json({\n    id: req.user.id,\n    fullname: req.user.name,\n    user: req.user.username,\n    tel: req.user.tel,\n    token: req.token,\n    iat: req.user.iat,\n    exp: req.user.exp,\n    status: 'success'\n  });\n}\n\nmodule.exports = {\n  authenticate,\n  generateAccessToken,\n  respond\n\n};\n"]}