{"version":3,"sources":["../../src/model/driver.js"],"names":["mongoose","require","bcrypt","crypto","Schema","TOKENTIME","SECRET","driverSchema","user","type","Types","ObjectId","ref","required","verified","Boolean","default","active","busy","last_location","Object","driver_licence","String","account_info","date_verified","Date","now","module","exports","model"],"mappings":";;AAGA;;;;AACA;;;;AAGA;;;;AACA;;;;;;AARA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,SAASD,QAAQ,eAAR,CAAf;AACA,IAAME,SAASF,QAAQ,QAAR,CAAf;;AAGA,IAAMG,SAASJ,SAASI,MAAxB;;AAMA,IAAMC,YAAY,MAAlB,C,CAA0B;AAC1B,IAAMC,SAAS,8BAAf;;AAEA,IAAIC,eAAe,IAAIP,SAASI,MAAb,CAAoB;AACvCI,QAAM;AACFC,UAAML,OAAOM,KAAP,CAAaC,QADjB;AAEFC,SAAK,MAFH;AAGFC,cAAU;AAHR,GADiC;AAMvCC,YAAU;AACRL,UAAMM,OADE;AAERF,cAAU,IAFF;AAGRG,aAAS;AAHD,GAN6B;AAWvCC,UAAQ;AACNR,UAAMM,OADA;AAENC,aAAS;AAFH,GAX+B;AAevCE,QAAM;AACJT,UAAMM,OADF;AAEJC,aAAS;AAFL,GAfiC;AAmBvCG,iBAAe;AACbV,UAAMW;AADO,GAnBwB;AAsBvCC,kBAAgB;AACdZ,UAAMa;AADQ,GAtBuB;AAyBvCC,gBAAc;AACZd,UAAMW;AADM,GAzByB;AA4BvCI,iBAAgB;AACdf,UAAMgB,IADQ;AAEdT,aAASS,KAAKC;AAFA;AA5BuB,CAApB,CAAnB;;AAmCAC,OAAOC,OAAP,GAAiB5B,SAAS6B,KAAT,CAAe,QAAf,EAAyBtB,YAAzB,CAAjB;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"driver.js","sourcesContent":["const mongoose = require('mongoose');\nconst bcrypt = require('bcrypt-nodejs');\nconst crypto = require('crypto');\nimport passportLocalMongoose from \"passport-local-mongoose\";\nimport config from '../config';\nconst Schema = mongoose.Schema;\n\nimport expressJwt from \"express-jwt\";\nimport jwt from \"jsonwebtoken\";\n\n\nconst TOKENTIME = '365d'; //1 year\nconst SECRET = \"rr34r3m4r34r3 4r34r3k4r34r3 \";\n\nvar driverSchema = new mongoose.Schema({\nuser: {\n    type: Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n},\nverified: {\n  type: Boolean,\n  required: true,\n  default: false,\n},\nactive: {\n  type: Boolean,\n  default: true,\n},\nbusy: {\n  type: Boolean,\n  default: false,\n},\nlast_location: {\n  type: Object \n},\ndriver_licence: {\n  type: String\n},\naccount_info: {\n  type: Object,\n},\ndate_verified:  { \n  type: Date, \n  default: Date.now\n}\n});\n\n\nmodule.exports = mongoose.model('Driver', driverSchema);\n\n\n//\n// userSchema.methods.gravatar = function(size) {\n//   if(!size) size = 200;\n//   if(!this.email) return 'https://gravatar.com/avartar/?s'+size+'&d=retro';\n//   var md5 = crypto.createHash('md5').update(this.email).digest('hex');\n//   return 'https://gravatar.com/avartar/?s'+md5+'&d=retro';\n// }\n//\n//\n// userSchema.methods.comparePassword = function(password) {\n//   return bcrypt.compareSync(password, this.password);\n// }\n//\n//\n// module.exports = mongoose.model('User', userSchema);\n"]}