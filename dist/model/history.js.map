{"version":3,"sources":["../../src/model/history.js"],"names":["mongoose","require","Schema","historySchema","type","String","pickup","required","pickup_coords","Object","dropoff","dropoff_coords","cost","Number","driver_status","default","payment_method","payment_token","transaction_id","payment_status","status","email","rating","km","hr","ref","wantToRate","Boolean","user","Types","ObjectId","driver","date","Date","date_finished","card","module","exports","model"],"mappings":";;AAAA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,IAAMC,SAASF,SAASE,MAAxB;;AAEA,IAAIC,gBAAgB,IAAIH,SAASE,MAAb,CAAoB;AACtCE,QAAM;AACJA,UAAMC;AADF,GADgC;AAItCC,UAAQ;AACNF,UAAMC,MADA;AAENE,cAAU;AAFJ,GAJ8B;AAQtCC,iBAAe;AACbJ,UAAMK;AADO,GARuB;AAWtCC,WAAS;AACPN,UAAMC,MADC;AAEPE,cAAU;AAFH,GAX6B;AAetCI,kBAAgB;AACdP,UAAMK;AADQ,GAfsB;AAkBtCG,QAAM;AACJR,UAAMS;AADF,GAlBgC;AAqBtCC,iBAAe;AACbV,UAAMC,MADO;AAEbU,aAAS;AAFI,GArBuB;AAyBtCC,kBAAgB;AACdZ,UAAMC;AADQ,GAzBsB;AA4BtCY,iBAAe;AACbb,UAAMC;AADO,GA5BuB;AA+BtCa,kBAAgB;AACdd,UAAMC;AADQ,GA/BsB;AAkCtCc,kBAAgB;AACdf,UAAMC,MADQ;AAEdU,aAAS;AAFK,GAlCsB;AAsCtCK,UAAQ;AACNhB,UAAMC,MADA;AAENU,aAAS;AAFH,GAtC8B;AA0CtCM,SAAO;AACLjB,UAAMC,MADD;AAELU,aAAS;AAFJ,GA1C+B;AA8CtCO,UAAQ;AACNlB,UAAMS,MADA;AAENE,aAAS;AAFH,GA9C8B;AAkDtCQ,MAAI;AACFnB,UAAMS,MADJ;AAEFE,aAAS;AAFP,GAlDkC;AAsDtCS,MAAI;AACFpB,UAAMS,MADJ;AAEFE,aAAS;AAFP,GAtDkC;AA0DtCU,OAAK;AACHrB,UAAMC,MADH;AAEHU,aAAS;AAFN,GA1DiC;AA8DtCW,cAAY;AACVtB,UAAMuB,OADI;AAEVZ,aAAS;AAFC,GA9D0B;AAkEtCa,QAAM;AACJxB,UAAMF,OAAO2B,KAAP,CAAaC,QADf;AAEJL,SAAK,MAFD;AAGJlB,cAAU;AAHN,GAlEgC;AAuEtCwB,UAAQ;AACN3B,UAAMF,OAAO2B,KAAP,CAAaC,QADb;AAENL,SAAK,QAFC;AAGNlB,cAAU;AAHJ,GAvE8B;AA4EtCyB,QAAM;AACJ5B,UAAM6B;AACN;AAFI,GA5EgC;AAgFtCC,iBAAe;AACb9B,UAAM6B;AACN;AAFa,GAhFuB;AAoFtCE,QAAM;AACJ/B,UAAMC,MADF;AAEJU,aAAS;AAFL;AApFgC,CAApB,CAApB;;AA4FAqB,OAAOC,OAAP,GAAiBrC,SAASsC,KAAT,CAAe,SAAf,EAA0BnC,aAA1B,CAAjB","file":"history.js","sourcesContent":["const mongoose = require('mongoose');\nconst Schema = mongoose.Schema;\n\nvar historySchema = new mongoose.Schema({\n  type: {\n    type: String,\n  },\n  pickup: {\n    type: String,\n    required: true,\n  },\n  pickup_coords: {\n    type: Object,\n  },\n  dropoff: {\n    type: String,\n    required: true,\n  },\n  dropoff_coords: {\n    type: Object,\n  },\n  cost: {\n    type: Number,\n  },\n  driver_status: {\n    type: String,\n    default: null,\n  },\n  payment_method: {\n    type: String,\n  },\n  payment_token: {\n    type: String,\n  },\n  transaction_id: {\n    type: String,\n  },\n  payment_status: {\n    type: String,\n    default: null,\n  },\n  status: {\n    type: String,\n    default: null,\n  },\n  email: {\n    type: String,\n    default: null,\n  },\n  rating: {\n    type: Number,\n    default: 0\n  },\n  km: {\n    type: Number,\n    default: 0\n  },\n  hr: {\n    type: Number,\n    default: 0\n  },\n  ref: {\n    type: String,\n    default: null\n  },\n  wantToRate: {\n    type: Boolean,\n    default: true\n  },\n  user: {\n    type: Schema.Types.ObjectId,\n    ref: 'User',\n    required: true\n  },\n  driver: {\n    type: Schema.Types.ObjectId,\n    ref: 'Driver',\n    required: true\n  },\n  date: {\n    type: Date,\n    // default: Date.now\n  },\n  date_finished: {\n    type: Date,\n    // default: Date.now\n  },\n  card: {\n    type: String,\n    default: null\n  }\n});\n\n\n\nmodule.exports = mongoose.model('History', historySchema);"]}