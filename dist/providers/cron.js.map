{"version":3,"sources":["../../src/providers/cron.js"],"names":["schedule","require","cronJob","scheduleJob","History","find","status","payment_method","payment_status","err","trans","console","log","length","forEach","request","post","url","headers","config","secret","paystack_token","json","authorization_code","element","card","email","amount","cost","error","response","body","data","driver_status","ref","reference","save"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAJA,IAAIA,WAAWC,QAAQ,eAAR,CAAf;;;AAMA,IAAIC,UAAUF,SAASG,WAAT,CAAqB,aAArB,EAAoC,YAAU;AAC1D;;AAEAC,oBAAQC,IAAR,CAAa,EAACC,QAAQ,WAAT,EAAsBC,gBAAgB,MAAtC,EAA8CC,gBAAgB,IAA9D,EAAb,EAAkF,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAChG,QAAID,GAAJ,EAAS;AACPE,cAAQC,GAAR,CAAYH,GAAZ;AACA;AACD;;AAED,QAAIC,MAAMG,MAAN,GAAe,CAAnB,EAAsB;AACpBH,YAAMI,OAAN,CAAc,mBAAW;AACvBC,0BAAQC,IAAR,CAAa;AACXC,eAAK,0DADM;AAEXC,mBAAU;AACR,6BAAkB,YAAUC,iBAAOC,MAAP,CAAcC;AADlC,WAFC;AAKXC,gBAAM;AACJC,gCAAoBC,QAAQC,IADxB;AAEJC,mBAAOF,QAAQE,KAFX;AAGJC,oBAAQH,QAAQI,IAAR,GAAe;;AAHnB;AALK,SAAb,EAWG,UAASC,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAA+B;AAChC,cAAID,SAASC,IAAT,CAAcC,IAAd,CAAmB1B,MAAnB,KAA8B,SAAlC,EAA6C;AAC3C;AACAK,oBAAQC,GAAR,CAAY,kBAAZ;AACAY,oBAAQhB,cAAR,GAAyB,WAAzB;AACAgB,oBAAQS,aAAR,GAAwB,WAAxB;AACAT,oBAAQU,GAAR,GAAcJ,SAASC,IAAT,CAAcC,IAAd,CAAmBG,SAAjC;;AAEAX,oBAAQY,IAAR;AACD;AACF,SArBD;AAsBD,OAvBD;AA0BD;AACF,GAlCD;AAmCD,CAtCa,CAAd;;kBAwCelC,O","file":"cron.js","sourcesContent":["var schedule = require('node-schedule');\nimport History from \"../model/history\";\nimport Failed from \"../model/failed\";\nimport request from 'request';\nimport config from \"../config\";\n\nvar cronJob = schedule.scheduleJob('*/1 * * * *', function(){\n  // console.log('Cron job runs every second!');\n\n  History.find({status: \"completed\", payment_method: 'CARD', payment_status: null}, (err, trans) => {\n    if (err) {\n      console.log(err);\n      return;\n    }\n\n    if (trans.length > 0) {\n      trans.forEach(element => {\n        request.post({\n          url: 'https://api.paystack.co/transaction/charge_authorization',\n          headers : {\n            \"Authorization\" : \"Bearer \"+config.secret.paystack_token\n          },\n          json: { \n            authorization_code: element.card, \n            email: element.email,\n            amount: element.cost * 100\n            \n          }\n        }, function(error, response, body){\n          if (response.body.data.status === \"success\") {\n            //good!!!!\n            console.log('One payment made');\n            element.payment_status = \"completed\";\n            element.driver_status = \"completed\";\n            element.ref = response.body.data.reference;\n            \n            element.save();\n          } \n        });  \n      });\n      \n      \n    }\n  })\n});\n\nexport default cronJob;"]}