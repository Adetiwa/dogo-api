{"version":3,"sources":["../../src/routes/index.js"],"names":["router","use","config","db"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,SAAS,wBAAb;;AAEA;AACA,kBAAa,cAAM;AACjB;AACAA,SAAOC,GAAP,CAAW,0BAAW,EAAEC,wBAAF,EAAUC,MAAV,EAAX,CAAX;AACA;AACAH,SAAOC,GAAP,CAAW,OAAX,EAAoB,oBAAK,EAAEC,wBAAF,EAAUC,MAAV,EAAL,CAApB;AACAH,SAAOC,GAAP,CAAW,QAAX,EAAqB,qBAAM,EAAEC,wBAAF,EAAUC,MAAV,EAAN,CAArB;AACAH,SAAOC,GAAP,CAAW,OAAX,EAAoB,oBAAK,EAAEC,wBAAF,EAAUC,MAAV,EAAL,CAApB;AACAH,SAAOC,GAAP,CAAW,WAAX,EAAwB,wBAAS,EAAEC,wBAAF,EAAUC,MAAV,EAAT,CAAxB;AACAH,SAAOC,GAAP,CAAW,UAAX,EAAuB,uBAAQ,EAAEC,wBAAF,EAAUC,MAAV,EAAR,CAAvB;AACAH,SAAOC,GAAP,CAAW,SAAX,EAAsB,sBAAO,EAAEC,wBAAF,EAAUC,MAAV,EAAP,CAAtB;AACAH,SAAOC,GAAP,CAAW,OAAX,EAAoB,oBAAK,EAAEC,wBAAF,EAAUC,MAAV,EAAL,CAApB;AACAH,SAAOC,GAAP,CAAW,UAAX,EAAuB,uBAAQ,EAAEC,wBAAF,EAAUC,MAAV,EAAR,CAAvB;AACAH,SAAOC,GAAP,CAAW,eAAX,EAA4B,4BAAa,EAAEC,wBAAF,EAAUC,MAAV,EAAb,CAA5B;AAED,CAdD;;kBAmBeH,M","file":"index.js","sourcesContent":["import express from \"express\";\nimport config from \"../config\";\nimport middleware from \"../middleware\";\nimport initializeDb from \"../config/db\";\nimport user from \"../controller/user\";\nimport token from \"../controller/token\";\nimport fare from \"../controller/fare\";\nimport activity from \"../controller/activity\";\nimport history from \"../controller/history\";\nimport driver from \"../controller/driver\";\nimport card from \"../controller/card\";\nimport support from \"../controller/support\";\nimport notification from \"../controller/notification\";\n\nlet router = express();\n\n//connect to db\ninitializeDb(db => {\n  //internal middleware\n  router.use(middleware({ config, db }));\n  // api routes v1 (/v1)\n  router.use('/user', user({ config, db }));\n  router.use('/token', token({ config, db }));\n  router.use('/fare', fare({ config, db }));\n  router.use('/activity', activity({ config, db }));\n  router.use('/history', history({ config, db }));\n  router.use('/driver', driver({ config, db }));\n  router.use('/card', card({ config, db }));\n  router.use('/support', support({ config, db }));\n  router.use('/notification', notification({ config, db }));\n\n});\n\n\n\n\nexport default router;\n"]}